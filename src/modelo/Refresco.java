package modelo;
// Generated 17 feb. 2021 10:34:25 by Hibernate Tools 5.4.27.Final

import java.io.IOException;
import java.sql.SQLException;

import javax.persistence.Column;
import javax.persistence.Id;
import javax.persistence.Table;
import org.hibernate.annotations.Entity;

import dao.DaoRefrescos;


/**
 * Refresco generated by hbm2java
 */
@Entity
@Table(name="refresco")
public class Refresco implements java.io.Serializable {

	@Id
	@Column(name="id")
	private Integer id;
	@Column(name="nombre")
	private String nombre;
	@Column(name="tamano")
	private int tamano;
	@Column(name="sabor")
	private String sabor;
	@Column(name="marca")
	private String marca;
	@Column(name="propiedades")
	private String propiedades;

	public Refresco() {
	}

	public Refresco(String nombre, int tamano, String sabor, String marca, String propiedades) {
		this.nombre = nombre;
		this.tamano = tamano;
		this.sabor = sabor;
		this.marca = marca;
		this.propiedades = propiedades;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	public int getTamano() {
		return this.tamano;
	}

	public void setTamano(int tamano) {
		this.tamano = tamano;
	}

	public String getSabor() {
		return this.sabor;
	}

	public void setSabor(String sabor) {
		this.sabor = sabor;
	}

	public String getMarca() {
		return this.marca;
	}

	public void setMarca(String marca) {
		this.marca = marca;
	}

	public String getPropiedades() {
		return this.propiedades;
	}

	public void setPropiedades(String propiedades) {
		this.propiedades = propiedades;
	}

	/**
	 * Inserta en la tabla.
	 * @throws IOException
	 * @throws SQLException
	 */
	public void insertar() throws IOException, SQLException {
		DaoRefrescos.insertar(this);
	}
	
	/**
	 * Actualiza los datos de la tabla.
	 * @throws IOException
	 * @throws SQLException
	 */
	public void update() throws IOException, SQLException {
		DaoRefrescos.update(this);
	}
	
	/**
	 *  Borrar los datos de la tabla.
	 * @throws IOException
	 * @throws SQLException
	 */
	public void delete() throws IOException, SQLException {
		DaoRefrescos.delete(this);
	}
	
	
	/**
	 *  Metodo que obtiene todos los elementos de la base de datos por su id.
	 * @param id
	 * @throws IOException
	 * @throws SQLException
	 */
	public void obtenerPorId(int id) throws IOException, SQLException{
		
		Refresco aux = DaoRefrescos.obtener(id);
		this.id = aux.getId();
		this.nombre = aux.getNombre();
		this.tamano = aux.getTamano();
		this.sabor = aux.getSabor();
		this.marca = aux.getMarca();	
		this.propiedades = aux.getPropiedades();
		
		
		System.out.println(this);
			
	}

	@Override
	public String toString() {
		return "Refresco [id=" + id + ", nombre=" + nombre + ", tamano=" + tamano + ", sabor=" + sabor + ", marca="
				+ marca + ", propiedades=" + propiedades + "]";
	}
	
	
}
